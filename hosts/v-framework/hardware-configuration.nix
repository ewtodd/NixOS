# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/09bd8c33-5f03-44b9-a40e-5488dc414cf2";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-650e7622-e9c2-4724-a220-49fac5683a85".device = "/dev/disk/by-uuid/650e7622-e9c2-4724-a220-49fac5683a85";
boot.initrd.luks.devices."luks-83f69c4f-16a7-49ab-89c7-a20fdc64b75f".device = "/dev/disk/by-uuid/83f69c4f-16a7-49ab-89c7-a20fdc64b75f";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/F5C0-91AE";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/061be41a-c343-4439-b3a7-6beca06982e8"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp170s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
